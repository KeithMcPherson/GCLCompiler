
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   identifier "constant" "integer" "Boolean" "typedefinition" "tuple" 
         "procedure" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "integer" "Boolean" "typedefinition" 
         "tuple" "procedure" 
follow:  "." ";" 

statementPart
first:   identifier "return" "skip" "read" "write" "if" "do" "forall" 
follow:  "end" "fi" "od" "llarof" "[]" 

definition
first:   identifier "constant" "integer" "Boolean" "typedefinition" "tuple" 
         "procedure" 
follow:  ";" 

statement
first:   identifier "return" "skip" "read" "write" "if" "do" "forall" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

constant
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "]" ".." 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "]" "array" "range" 

arrayType
first:   "array" 
follow:  identifier 

rangeType
first:   "range" 
follow:  identifier 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "," "=" "[" "]" ")" "!" "@" "array" "range" ".." ":=" 
         "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" "*" "/" "\\" 

justProcs
first:   "procedure" 
follow:  "]" 

fieldsAndProcs
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcs
first:   "," "procedure" 
follow:  "]" 

paramPart
first:   "(" 
follow:  "," "]" 

paramDefinition
first:   "value" "reference" 
follow:  ";" ")" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

assignOrCallStatement
first:   identifier 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "," "=" "]" ")" "!" ".." ":=" "->" "|" "&" "+" "-" "#" "<" "<=" 
         ">" ">=" "*" "/" "\\" 

assignStatement
first:   "," ":=" 
follow:  ";" 

returnStatement
first:   "return" 
follow:  ";" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

writeItem
first:   identifier numeral stringConstant "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "fi" "od" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "fi" "od" "[]" 

andExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "#" "<" "<=" ">" ">=" 

relationalOperator
first:   "=" "#" "<" "<=" ">" ">=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "true" "false" 

term
first:   identifier numeral "[" "(" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "~" "true" "false" 

factor
first:   identifier numeral "[" "(" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "~" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 
         "*" "/" "\\" 

subsAndCompons
first:   "[" "@" 
follow:  ";" "," "=" "]" ")" "!" ".." ":=" "->" "|" "&" "+" "-" "#" "<" "<=" 
         ">" ">=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           162
  "#"           340
  "&"           282
  "("           151  169  317
  ")"           151  172  317
  "*"           353
  "+"           297  348
  ","            81  127  138  171  222  226  239  242  323
  "-"           298  349
  "->"          257  267
  "."            55  360
  ".."          204
  "/"           354
  ":="          240
  ";"            61   65   65  151
  "<"           341
  "<="          342
  "="            91  339
  ">"           343
  ">="          344
  "@"           183  374
  "Boolean"     106
  "["           120  197  198  203  321  374
  "[]"          263
  "\\"          355
  "]"           120  197  198  205  326  374
  "array"       197
  "begin"        59
  "constant"     90
  "do"          252
  "end"          59
  "false"       335
  "fi"          248
  "forall"      257
  "if"          247
  "integer"     105
  "llarof"      259
  "module"       54
  "od"          253
  "private"      55
  "procedure"   144  182
  "range"       203
  "read"        221
  "reference"   157
  "return"      191
  "skip"        217
  "true"        334
  "tuple"       120
  "typedefinit  115
  "value"       156
  "write"       226
  "|"           274
  "~"           328
  addOperator  -346  301
  andExpr      -278  273  274
  argumentList -166  163
  arrayType    -194  100
  assignOrCall -175  213
  assignStatem -235  177
  block         -57   55  186
  booleanConst -332  327
  callStatemen -160  177
  constant      -94   91  203  204
  constantDefi  -87   70
  definition    -67   61
  definitionPa  -61   54   59
  doStatement  -250  213
  emptyStateme -217  212
  expression   -270   96  170  171  232  241  242  267  317  321  323  374
  factor       -311  308  308  328
  fieldsAndPro -130  120
  forStatement -255  213
  gcl           -46
  guardedComma -265  263  263
  guardedComma -261  247  252
  identifier     54   77   81   90  115  132  138  144  162  182  183  359  360
                374
  ifStatement  -245  213
  justProcs    -124  120  139
  module        -53   49   50
  moreFieldsAn -136  133  139
  multiplyOper -351  308
  numeral       314
  paramDefinit -154  151  151
  paramPart    -149  146
  procedureDec -142  127  127
  procedureDef -180   72
  qualifiedIde -357  107  368
  rangeType    -201  100
  readStatemen -219  212
  relationalEx -286  281  282
  relationalOp -337  290
  returnStatem -189  214
  simpleExpr   -294  289  290
  statement    -210   65   65
  statementPar  -63   59  258  268
  stringConsta  233
  subsAndCompo -371  369
  term         -305  297  298  301
  tupleType    -118  100
  type          -98   77  115
  typeDefiniti -112   71
  typeSymbol   -102  100  132  138  197  198
  variableAcce -365  177  221  222  239  257  313
  variableDefi  -74   69  156  157
  writeItem    -229  226  226
  writeStateme -224  212



58 terminals
115 symbols
370 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 stringConsta   t    false                24 classToken
  4 "module"       t    false                54 litToken
  5 "private"      t    false                55 litToken
  6 "."            t    false                55 fixedToken
  7 "begin"        t    false                59 litToken
  8 "end"          t    false                59 litToken
  9 ";"            t    false                61 fixedToken
 10 ","            t    false                81 fixedToken
 11 "constant"     t    false                90 litToken
 12 "="            t    false                91 fixedToken
 13 "integer"      t    false               105 litToken
 14 "Boolean"      t    false               106 litToken
 15 "typedefinit   t    false               115 litToken
 16 "tuple"        t    false               120 litToken
 17 "["            t    false               120 fixedToken
 18 "]"            t    false               120 fixedToken
 19 "procedure"    t    false               144 litToken
 20 "("            t    false               151 fixedToken
 21 ")"            t    false               151 fixedToken
 22 "value"        t    false               156 litToken
 23 "reference"    t    false               157 litToken
 24 "!"            t    false               162 fixedToken
 25 "@"            t    false               183 fixedToken
 26 "return"       t    false               191 litToken
 27 "array"        t    false               197 litToken
 28 "range"        t    false               203 litToken
 29 ".."           t    false               204 fixedToken
 30 "skip"         t    false               217 litToken
 31 "read"         t    false               221 litToken
 32 "write"        t    false               226 litToken
 33 ":="           t    false               240 fixedToken
 34 "if"           t    false               247 litToken
 35 "fi"           t    false               248 litToken
 36 "do"           t    false               252 litToken
 37 "od"           t    false               253 litToken
 38 "forall"       t    false               257 litToken
 39 "->"           t    false               257 fixedToken
 40 "llarof"       t    false               259 litToken
 41 "[]"           t    false               263 fixedToken
 42 "|"            t    false               274 fixedToken
 43 "&"            t    false               282 fixedToken
 44 "+"            t    false               297 fixedToken
 45 "-"            t    false               298 fixedToken
 46 "~"            t    false               328 fixedToken
 47 "true"         t    false               334 litToken
 48 "false"        t    false               335 litToken
 49 "#"            t    false               340 fixedToken
 50 "<"            t    false               341 fixedToken
 51 "<="           t    false               342 fixedToken
 52 ">"            t    false               343 fixedToken
 53 ">="           t    false               344 fixedToken
 54 "*"            t    false               353 fixedToken
 55 "/"            t    false               354 fixedToken
 56 "\\"           t    false               355 fixedToken
 57 ???            t    false                 0 fixedToken
 58 option1        pr   false                27 fixedToken
 59 option3        pr   false                29 fixedToken
 60 option5        pr   false                31 fixedToken
 61 option6        pr   false                32 fixedToken
 62 option7        pr   false                33 fixedToken
 63 option9        pr   false                35 fixedToken
 64 option10       pr   false                36 fixedToken
  0 gcl            nt   false     1 false    46 fixedToken
  1 module         nt   true      9 false    53 fixedToken
  2 definitionPa   nt   true     27 true     61 fixedToken
  3 block          nt   true     18 false    57 fixedToken
  4 statementPar   nt   true     28 false    63 fixedToken
  5 definition     nt   true     37 false    67 fixedToken
  6 statement      nt   true    181 false   210 fixedToken
  7 variableDefi   nt   true     43 false    74 fixedToken
  8 constantDefi   nt   true     50 false    87 fixedToken
  9 typeDefiniti   nt   true     76 false   112 fixedToken
 10 procedureDef   nt   true    150 false   180 fixedToken
 11 type           nt   true     65 false    98 fixedToken
 12 constant       nt   true     56 false    94 fixedToken
 13 expression     nt   true    253 false   270 fixedToken
 14 typeSymbol     nt   true     71 false   102 fixedToken
 15 arrayType      nt   true    160 false   194 fixedToken
 16 rangeType      nt   true    172 false   201 fixedToken
 17 tupleType      nt   true     81 false   118 fixedToken
 18 qualifiedIde   nt   true    351 false   357 fixedToken
 19 justProcs      nt   true     89 false   124 fixedToken
 20 fieldsAndPro   nt   true     95 false   130 fixedToken
 21 procedureDec   nt   true    110 false   142 fixedToken
 22 moreFieldsAn   nt   true    109 true    136 fixedToken
 23 paramPart      nt   true    115 false   149 fixedToken
 24 paramDefinit   nt   true    126 false   154 fixedToken
 25 callStatemen   nt   true    128 false   160 fixedToken
 26 argumentList   nt   true    133 false   166 fixedToken
 27 assignOrCall   nt   true    145 false   175 fixedToken
 28 variableAcce   nt   true    357 false   365 fixedToken
 29 assignStatem   nt   true    215 false   235 fixedToken
 30 returnStatem   nt   false   158 false   189 fixedToken
 31 emptyStateme   nt   false   195 false   217 fixedToken
 32 readStatemen   nt   true    196 false   219 fixedToken
 33 writeStateme   nt   true    203 false   224 fixedToken
 34 ifStatement    nt   true    228 false   245 fixedToken
 35 doStatement    nt   true    233 false   250 fixedToken
 36 forStatement   nt   true    237 false   255 fixedToken
 37 writeItem      nt   true    213 false   229 fixedToken
 38 guardedComma   nt   true    244 false   261 fixedToken
 39 guardedComma   nt   true    248 false   265 fixedToken
 40 andExpr        nt   true    258 false   278 fixedToken
 41 relationalEx   nt   true    263 false   286 fixedToken
 42 simpleExpr     nt   true    274 false   294 fixedToken
 43 relationalOp   nt   false   322 false   337 fixedToken
 44 term           nt   true    280 false   305 fixedToken
 45 addOperator    nt   false   340 false   346 fixedToken
 46 factor         nt   true    289 false   311 fixedToken
 47 multiplyOper   nt   false   346 false   351 fixedToken
 48 booleanConst   nt   false   316 false   332 fixedToken
 49 subsAndCompo   nt   true    369 true    371 fixedToken

Literal Tokens:
--------------

