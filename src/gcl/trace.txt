
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   identifier "constant" "integer" "Boolean" "typedefinition" "tuple" 
         "procedure" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "integer" "Boolean" "typedefinition" 
         "tuple" "procedure" 
follow:  "." ";" 

statementPart
first:   identifier "skip" "read" "write" "if" "do" "forall" 
follow:  "end" "fi" "od" "llarof" "[]" 

definition
first:   identifier "constant" "integer" "Boolean" "typedefinition" "tuple" 
         "procedure" 
follow:  ";" 

statement
first:   identifier "skip" "read" "write" "if" "do" "forall" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

constant
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "]" ".." 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "]" "array" "range" 

arrayType
first:   "array" 
follow:  identifier 

rangeType
first:   "range" 
follow:  identifier 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "," "=" "[" "]" ")" "!" "@" "array" "range" ".." ":=" 
         "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" "*" "/" "\\" 

justProcs
first:   "procedure" 
follow:  "]" 

fieldsAndProcs
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcs
first:   "," "procedure" 
follow:  "]" 

paramPart
first:   "(" 
follow:  "," "]" 

paramDefinition
first:   "value" "reference" 
follow:  ";" ")" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

assignOrCallStatement
first:   identifier 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "," "=" "]" ")" "!" ".." ":=" "->" "|" "&" "+" "-" "#" "<" "<=" 
         ">" ">=" "*" "/" "\\" 

assignStatement
first:   "," ":=" 
follow:  ";" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

writeItem
first:   identifier numeral stringConstant "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "fi" "od" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "fi" "od" "[]" 

andExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "#" "<" "<=" ">" ">=" 

relationalOperator
first:   "=" "#" "<" "<=" ">" ">=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "true" "false" 

term
first:   identifier numeral "[" "(" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "~" "true" "false" 

factor
first:   identifier numeral "[" "(" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "~" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 
         "*" "/" "\\" 

subsAndCompons
first:   "[" "@" 
follow:  ";" "," "=" "]" ")" "!" ".." ":=" "->" "|" "&" "+" "-" "#" "<" "<=" 
         ">" ">=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           160
  "#"           326
  "&"           268
  "("           150  166  303
  ")"           150  168  303
  "*"           339
  "+"           283  334
  ","            81  127  138  167  208  212  225  228  309
  "-"           284  335
  "->"          243  253
  "."            55  346
  ".."          191
  "/"           340
  ":="          226
  ";"            61   65   65  150
  "<"           327
  "<="          328
  "="            91  325
  ">"           329
  ">="          330
  "@"           178  360
  "Boolean"     106
  "["           120  184  185  190  307  360
  "[]"          249
  "\\"          341
  "]"           120  184  185  192  312  360
  "array"       184
  "begin"        59
  "constant"     90
  "do"          238
  "end"          59
  "false"       321
  "fi"          234
  "forall"      243
  "if"          233
  "integer"     105
  "llarof"      245
  "module"       54
  "od"          239
  "private"      55
  "procedure"   144  178
  "range"       190
  "read"        207
  "reference"   155
  "skip"        203
  "true"        320
  "tuple"       120
  "typedefinit  115
  "value"       155
  "write"       212
  "|"           260
  "~"           314
  addOperator  -332  287
  andExpr      -264  259  260
  argumentList -164  161
  arrayType    -181  100
  assignOrCall -171  200
  assignStatem -221  173
  block         -57   55  178
  booleanConst -318  313
  callStatemen -158  173
  constant      -94   91  190  191
  constantDefi  -87   70
  definition    -67   61
  definitionPa  -61   54   59
  doStatement  -236  200
  emptyStateme -203  199
  expression   -256   96  167  167  218  227  228  253  303  307  309  360
  factor       -297  294  294  314
  fieldsAndPro -130  120
  forStatement -241  200
  gcl           -46
  guardedComma -251  249  249
  guardedComma -247  233  238
  identifier     54   77   81   90  115  132  138  144  160  178  178  345  346
                360
  ifStatement  -231  200
  justProcs    -124  120  139
  module        -53   49   50
  moreFieldsAn -136  133  139
  multiplyOper -337  294
  numeral       300
  paramDefinit -153  150  150
  paramPart    -148  145
  procedureDec -142  127  127
  procedureDef -176   72
  qualifiedIde -343  107  354
  rangeType    -188  100
  readStatemen -205  199
  relationalEx -272  267  268
  relationalOp -323  276
  simpleExpr   -280  275  276
  statement    -197   65   65
  statementPar  -63   59  244  254
  stringConsta  219
  subsAndCompo -357  355
  term         -291  283  284  287
  tupleType    -118  100
  type          -98   77  115
  typeDefiniti -112   71
  typeSymbol   -102  100  132  138  184  185
  variableAcce -351  173  207  208  225  243  299
  variableDefi  -74   69  155
  writeItem    -215  212  212
  writeStateme -210  199



57 terminals
113 symbols
360 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 stringConsta   t    false                24 classToken
  4 "module"       t    false                54 litToken
  5 "private"      t    false                55 litToken
  6 "."            t    false                55 fixedToken
  7 "begin"        t    false                59 litToken
  8 "end"          t    false                59 litToken
  9 ";"            t    false                61 fixedToken
 10 ","            t    false                81 fixedToken
 11 "constant"     t    false                90 litToken
 12 "="            t    false                91 fixedToken
 13 "integer"      t    false               105 litToken
 14 "Boolean"      t    false               106 litToken
 15 "typedefinit   t    false               115 litToken
 16 "tuple"        t    false               120 litToken
 17 "["            t    false               120 fixedToken
 18 "]"            t    false               120 fixedToken
 19 "procedure"    t    false               144 litToken
 20 "("            t    false               150 fixedToken
 21 ")"            t    false               150 fixedToken
 22 "value"        t    false               155 litToken
 23 "reference"    t    false               155 litToken
 24 "!"            t    false               160 fixedToken
 25 "@"            t    false               178 fixedToken
 26 "array"        t    false               184 litToken
 27 "range"        t    false               190 litToken
 28 ".."           t    false               191 fixedToken
 29 "skip"         t    false               203 litToken
 30 "read"         t    false               207 litToken
 31 "write"        t    false               212 litToken
 32 ":="           t    false               226 fixedToken
 33 "if"           t    false               233 litToken
 34 "fi"           t    false               234 litToken
 35 "do"           t    false               238 litToken
 36 "od"           t    false               239 litToken
 37 "forall"       t    false               243 litToken
 38 "->"           t    false               243 fixedToken
 39 "llarof"       t    false               245 litToken
 40 "[]"           t    false               249 fixedToken
 41 "|"            t    false               260 fixedToken
 42 "&"            t    false               268 fixedToken
 43 "+"            t    false               283 fixedToken
 44 "-"            t    false               284 fixedToken
 45 "~"            t    false               314 fixedToken
 46 "true"         t    false               320 litToken
 47 "false"        t    false               321 litToken
 48 "#"            t    false               326 fixedToken
 49 "<"            t    false               327 fixedToken
 50 "<="           t    false               328 fixedToken
 51 ">"            t    false               329 fixedToken
 52 ">="           t    false               330 fixedToken
 53 "*"            t    false               339 fixedToken
 54 "/"            t    false               340 fixedToken
 55 "\\"           t    false               341 fixedToken
 56 ???            t    false                 0 fixedToken
 57 option1        pr   false                27 fixedToken
 58 option3        pr   false                29 fixedToken
 59 option5        pr   false                31 fixedToken
 60 option6        pr   false                32 fixedToken
 61 option7        pr   false                33 fixedToken
 62 option9        pr   false                35 fixedToken
 63 option10       pr   false                36 fixedToken
  0 gcl            nt   false     1 false    46 fixedToken
  1 module         nt   true      9 false    53 fixedToken
  2 definitionPa   nt   true     27 true     61 fixedToken
  3 block          nt   true     18 false    57 fixedToken
  4 statementPar   nt   true     28 false    63 fixedToken
  5 definition     nt   true     37 false    67 fixedToken
  6 statement      nt   true    173 false   197 fixedToken
  7 variableDefi   nt   true     43 false    74 fixedToken
  8 constantDefi   nt   true     50 false    87 fixedToken
  9 typeDefiniti   nt   true     76 false   112 fixedToken
 10 procedureDef   nt   true    144 false   176 fixedToken
 11 type           nt   true     65 false    98 fixedToken
 12 constant       nt   true     56 false    94 fixedToken
 13 expression     nt   true    243 false   256 fixedToken
 14 typeSymbol     nt   true     71 false   102 fixedToken
 15 arrayType      nt   true    152 false   181 fixedToken
 16 rangeType      nt   true    164 false   188 fixedToken
 17 tupleType      nt   true     81 false   118 fixedToken
 18 qualifiedIde   nt   true    341 false   343 fixedToken
 19 justProcs      nt   true     89 false   124 fixedToken
 20 fieldsAndPro   nt   true     95 false   130 fixedToken
 21 procedureDec   nt   true    109 false   142 fixedToken
 22 moreFieldsAn   nt   true    108 true    136 fixedToken
 23 paramPart      nt   true    114 false   148 fixedToken
 24 paramDefinit   nt   true    123 false   153 fixedToken
 25 callStatemen   nt   true    126 false   158 fixedToken
 26 argumentList   nt   true    131 false   164 fixedToken
 27 assignOrCall   nt   true    139 false   171 fixedToken
 28 variableAcce   nt   true    347 false   351 fixedToken
 29 assignStatem   nt   true    205 false   221 fixedToken
 30 emptyStateme   nt   false   185 false   203 fixedToken
 31 readStatemen   nt   true    186 false   205 fixedToken
 32 writeStateme   nt   true    193 false   210 fixedToken
 33 ifStatement    nt   true    218 false   231 fixedToken
 34 doStatement    nt   true    223 false   236 fixedToken
 35 forStatement   nt   true    227 false   241 fixedToken
 36 writeItem      nt   true    203 false   215 fixedToken
 37 guardedComma   nt   true    234 false   247 fixedToken
 38 guardedComma   nt   true    238 false   251 fixedToken
 39 andExpr        nt   true    248 false   264 fixedToken
 40 relationalEx   nt   true    253 false   272 fixedToken
 41 simpleExpr     nt   true    264 false   280 fixedToken
 42 relationalOp   nt   false   312 false   323 fixedToken
 43 term           nt   true    270 false   291 fixedToken
 44 addOperator    nt   false   330 false   332 fixedToken
 45 factor         nt   true    279 false   297 fixedToken
 46 multiplyOper   nt   false   336 false   337 fixedToken
 47 booleanConst   nt   false   306 false   318 fixedToken
 48 subsAndCompo   nt   true    359 true    357 fixedToken

Literal Tokens:
--------------

