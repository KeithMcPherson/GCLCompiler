
First & follow symbols:
----------------------

gcl
first:   "module" 
follow:  EOF 

module
first:   "module" 
follow:  EOF "module" 

definitionPart
first:   identifier "constant" "integer" "Boolean" "typedefinition" "tuple" 
         "procedure" 
follow:  "private" "." "begin" 

block
first:   identifier "begin" "constant" "integer" "Boolean" "typedefinition" 
         "tuple" "procedure" 
follow:  "." ";" 

statementPart
first:   identifier "return" "skip" "read" "write" "if" "do" "forall" 
follow:  "end" "fi" "od" "llarof" "[]" 

definition
first:   identifier "constant" "integer" "Boolean" "typedefinition" "tuple" 
         "procedure" 
follow:  ";" 

statement
first:   identifier "return" "skip" "read" "write" "if" "do" "forall" 
follow:  ";" 

variableDefinition
first:   identifier "integer" "Boolean" "tuple" 
follow:  ";" ")" 

constantDefinition
first:   "constant" 
follow:  ";" 

typeDefinition
first:   "typedefinition" 
follow:  ";" 

procedureDefinition
first:   "procedure" 
follow:  ";" 

type
first:   identifier "integer" "Boolean" "tuple" 
follow:  identifier 

constant
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "]" ".." 

expression
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" 

typeSymbol
first:   identifier "integer" "Boolean" 
follow:  identifier "]" "array" "range" 

arrayType
first:   "array" 
follow:  identifier 

rangeType
first:   "range" 
follow:  identifier 

tupleType
first:   "tuple" 
follow:  identifier 

qualifiedIdentifier
first:   identifier 
follow:  identifier ";" "," "=" "[" "]" ")" "!" "@" "array" "range" ".." ":=" 
         "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" "*" "/" "\\" 

justProcs
first:   "procedure" 
follow:  "]" 

fieldsAndProcs
first:   identifier "integer" "Boolean" 
follow:  "]" 

procedureDeclaration
first:   "procedure" 
follow:  "," "]" 

moreFieldsAndProcs
first:   "," "procedure" 
follow:  "]" 

paramPart
first:   "(" 
follow:  "," "]" 

paramDefinition
first:   "value" "reference" 
follow:  ";" ")" 

callStatement
first:   "!" 
follow:  ";" 

argumentList
first:   "(" 
follow:  ";" 

assignOrCallStatement
first:   identifier 
follow:  ";" 

variableAccessEtc
first:   identifier 
follow:  ";" "," "=" "]" ")" "!" ".." ":=" "->" "|" "&" "+" "-" "#" "<" "<=" 
         ">" ">=" "*" "/" "\\" 

assignStatement
first:   "," ":=" 
follow:  ";" 

returnStatement
first:   "return" 
follow:  ";" 

emptyStatement
first:   "skip" 
follow:  ";" 

readStatement
first:   "read" 
follow:  ";" 

writeStatement
first:   "write" 
follow:  ";" 

ifStatement
first:   "if" 
follow:  ";" 

doStatement
first:   "do" 
follow:  ";" 

forStatement
first:   "forall" 
follow:  ";" 

writeItem
first:   identifier numeral stringConstant "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," 

guardedCommandList
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "fi" "od" 

guardedCommand
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  "fi" "od" "[]" 

andExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" "|" 

relationalExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "]" ")" ".." "->" "|" "&" 

simpleExpr
first:   identifier numeral "[" "(" "+" "-" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "#" "<" "<=" ">" ">=" 

relationalOperator
first:   "=" "#" "<" "<=" ">" ">=" 
follow:  identifier numeral "[" "(" "+" "-" "~" "true" "false" 

term
first:   identifier numeral "[" "(" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 

addOperator
first:   "+" "-" 
follow:  identifier numeral "[" "(" "~" "true" "false" 

factor
first:   identifier numeral "[" "(" "~" "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 
         "*" "/" "\\" 

multiplyOperator
first:   "*" "/" "\\" 
follow:  identifier numeral "[" "(" "~" "true" "false" 

booleanConstant
first:   "true" "false" 
follow:  ";" "," "=" "]" ")" ".." "->" "|" "&" "+" "-" "#" "<" "<=" ">" ">=" 
         "*" "/" "\\" 

subsAndCompons
first:   "[" "@" 
follow:  ";" "," "=" "]" ")" "!" ".." ":=" "->" "|" "&" "+" "-" "#" "<" "<=" 
         ">" ">=" "*" "/" "\\" 


Cross reference list:
--------------------

  "!"           162
  "#"           338
  "&"           280
  "("           151  168  315
  ")"           151  170  315
  "*"           351
  "+"           295  346
  ","            81  127  138  169  220  224  237  240  321
  "-"           296  347
  "->"          255  265
  "."            55  358
  ".."          202
  "/"           352
  ":="          238
  ";"            61   65   65  151
  "<"           339
  "<="          340
  "="            91  337
  ">"           341
  ">="          342
  "@"           181  372
  "Boolean"     106
  "["           120  195  196  201  319  372
  "[]"          261
  "\\"          353
  "]"           120  195  196  203  324  372
  "array"       195
  "begin"        59
  "constant"     90
  "do"          250
  "end"          59
  "false"       333
  "fi"          246
  "forall"      255
  "if"          245
  "integer"     105
  "llarof"      257
  "module"       54
  "od"          251
  "private"      55
  "procedure"   144  180
  "range"       201
  "read"        219
  "reference"   157
  "return"      189
  "skip"        215
  "true"        332
  "tuple"       120
  "typedefinit  115
  "value"       156
  "write"       224
  "|"           272
  "~"           326
  addOperator  -344  299
  andExpr      -276  271  272
  argumentList -166  163
  arrayType    -192  100
  assignOrCall -173  211
  assignStatem -233  175
  block         -57   55  184
  booleanConst -330  325
  callStatemen -160  175
  constant      -94   91  201  202
  constantDefi  -87   70
  definition    -67   61
  definitionPa  -61   54   59
  doStatement  -248  211
  emptyStateme -215  210
  expression   -268   96  169  169  230  239  240  265  315  319  321  372
  factor       -309  306  306  326
  fieldsAndPro -130  120
  forStatement -253  211
  gcl           -46
  guardedComma -263  261  261
  guardedComma -259  245  250
  identifier     54   77   81   90  115  132  138  144  162  180  181  357  358
                372
  ifStatement  -243  211
  justProcs    -124  120  139
  module        -53   49   50
  moreFieldsAn -136  133  139
  multiplyOper -349  306
  numeral       312
  paramDefinit -154  151  151
  paramPart    -149  146
  procedureDec -142  127  127
  procedureDef -178   72
  qualifiedIde -355  107  366
  rangeType    -199  100
  readStatemen -217  210
  relationalEx -284  279  280
  relationalOp -335  288
  returnStatem -187  212
  simpleExpr   -292  287  288
  statement    -208   65   65
  statementPar  -63   59  256  266
  stringConsta  231
  subsAndCompo -369  367
  term         -303  295  296  299
  tupleType    -118  100
  type          -98   77  115
  typeDefiniti -112   71
  typeSymbol   -102  100  132  138  195  196
  variableAcce -363  175  219  220  237  255  311
  variableDefi  -74   69  156  157
  writeItem    -227  224  224
  writeStateme -222  210



58 terminals
115 symbols
366 nodes
11 sets
Symbol Table:
------------

 nr name           typ  hasAt graph  del   line tokenKind
  0 EOF            t    false                 0 fixedToken
  1 identifier     t    false                22 classLitToken
  2 numeral        t    false                23 classToken
  3 stringConsta   t    false                24 classToken
  4 "module"       t    false                54 litToken
  5 "private"      t    false                55 litToken
  6 "."            t    false                55 fixedToken
  7 "begin"        t    false                59 litToken
  8 "end"          t    false                59 litToken
  9 ";"            t    false                61 fixedToken
 10 ","            t    false                81 fixedToken
 11 "constant"     t    false                90 litToken
 12 "="            t    false                91 fixedToken
 13 "integer"      t    false               105 litToken
 14 "Boolean"      t    false               106 litToken
 15 "typedefinit   t    false               115 litToken
 16 "tuple"        t    false               120 litToken
 17 "["            t    false               120 fixedToken
 18 "]"            t    false               120 fixedToken
 19 "procedure"    t    false               144 litToken
 20 "("            t    false               151 fixedToken
 21 ")"            t    false               151 fixedToken
 22 "value"        t    false               156 litToken
 23 "reference"    t    false               157 litToken
 24 "!"            t    false               162 fixedToken
 25 "@"            t    false               181 fixedToken
 26 "return"       t    false               189 litToken
 27 "array"        t    false               195 litToken
 28 "range"        t    false               201 litToken
 29 ".."           t    false               202 fixedToken
 30 "skip"         t    false               215 litToken
 31 "read"         t    false               219 litToken
 32 "write"        t    false               224 litToken
 33 ":="           t    false               238 fixedToken
 34 "if"           t    false               245 litToken
 35 "fi"           t    false               246 litToken
 36 "do"           t    false               250 litToken
 37 "od"           t    false               251 litToken
 38 "forall"       t    false               255 litToken
 39 "->"           t    false               255 fixedToken
 40 "llarof"       t    false               257 litToken
 41 "[]"           t    false               261 fixedToken
 42 "|"            t    false               272 fixedToken
 43 "&"            t    false               280 fixedToken
 44 "+"            t    false               295 fixedToken
 45 "-"            t    false               296 fixedToken
 46 "~"            t    false               326 fixedToken
 47 "true"         t    false               332 litToken
 48 "false"        t    false               333 litToken
 49 "#"            t    false               338 fixedToken
 50 "<"            t    false               339 fixedToken
 51 "<="           t    false               340 fixedToken
 52 ">"            t    false               341 fixedToken
 53 ">="           t    false               342 fixedToken
 54 "*"            t    false               351 fixedToken
 55 "/"            t    false               352 fixedToken
 56 "\\"           t    false               353 fixedToken
 57 ???            t    false                 0 fixedToken
 58 option1        pr   false                27 fixedToken
 59 option3        pr   false                29 fixedToken
 60 option5        pr   false                31 fixedToken
 61 option6        pr   false                32 fixedToken
 62 option7        pr   false                33 fixedToken
 63 option9        pr   false                35 fixedToken
 64 option10       pr   false                36 fixedToken
  0 gcl            nt   false     1 false    46 fixedToken
  1 module         nt   true      9 false    53 fixedToken
  2 definitionPa   nt   true     27 true     61 fixedToken
  3 block          nt   true     18 false    57 fixedToken
  4 statementPar   nt   true     28 false    63 fixedToken
  5 definition     nt   true     37 false    67 fixedToken
  6 statement      nt   true    177 false   208 fixedToken
  7 variableDefi   nt   true     43 false    74 fixedToken
  8 constantDefi   nt   true     50 false    87 fixedToken
  9 typeDefiniti   nt   true     76 false   112 fixedToken
 10 procedureDef   nt   true    146 false   178 fixedToken
 11 type           nt   true     65 false    98 fixedToken
 12 constant       nt   true     56 false    94 fixedToken
 13 expression     nt   true    249 false   268 fixedToken
 14 typeSymbol     nt   true     71 false   102 fixedToken
 15 arrayType      nt   true    156 false   192 fixedToken
 16 rangeType      nt   true    168 false   199 fixedToken
 17 tupleType      nt   true     81 false   118 fixedToken
 18 qualifiedIde   nt   true    347 false   355 fixedToken
 19 justProcs      nt   true     89 false   124 fixedToken
 20 fieldsAndPro   nt   true     95 false   130 fixedToken
 21 procedureDec   nt   true    110 false   142 fixedToken
 22 moreFieldsAn   nt   true    109 true    136 fixedToken
 23 paramPart      nt   true    115 false   149 fixedToken
 24 paramDefinit   nt   true    126 false   154 fixedToken
 25 callStatemen   nt   true    128 false   160 fixedToken
 26 argumentList   nt   true    133 false   166 fixedToken
 27 assignOrCall   nt   true    141 false   173 fixedToken
 28 variableAcce   nt   true    353 false   363 fixedToken
 29 assignStatem   nt   true    211 false   233 fixedToken
 30 returnStatem   nt   false   154 false   187 fixedToken
 31 emptyStateme   nt   false   191 false   215 fixedToken
 32 readStatemen   nt   true    192 false   217 fixedToken
 33 writeStateme   nt   true    199 false   222 fixedToken
 34 ifStatement    nt   true    224 false   243 fixedToken
 35 doStatement    nt   true    229 false   248 fixedToken
 36 forStatement   nt   true    233 false   253 fixedToken
 37 writeItem      nt   true    209 false   227 fixedToken
 38 guardedComma   nt   true    240 false   259 fixedToken
 39 guardedComma   nt   true    244 false   263 fixedToken
 40 andExpr        nt   true    254 false   276 fixedToken
 41 relationalEx   nt   true    259 false   284 fixedToken
 42 simpleExpr     nt   true    270 false   292 fixedToken
 43 relationalOp   nt   false   318 false   335 fixedToken
 44 term           nt   true    276 false   303 fixedToken
 45 addOperator    nt   false   336 false   344 fixedToken
 46 factor         nt   true    285 false   309 fixedToken
 47 multiplyOper   nt   false   342 false   349 fixedToken
 48 booleanConst   nt   false   312 false   330 fixedToken
 49 subsAndCompo   nt   true    365 true    369 fixedToken

Literal Tokens:
--------------

